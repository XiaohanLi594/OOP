package PRVM;

import java.util.ArrayList;
import java.util.List;

public class AssignmentTwo
{
    public static void main(String[] args)
    {
        AssignmentTwo assignment = new AssignmentTwo();
        assignment.partThree();
        assignment.partFourA();
        assignment.partFourB();
        assignment.partFive();
        assignment.partSix();
        assignment.partSeven();
    }

    private Ride createRollerCoaster()
    {
        return new Ride("Roller Coaster", 120, new Employee("John", "Doe", 30, "E001", "Operator", 30000), true);
    }

    public void partThree()
    {
        System.out.println("Executing Part Three");
        Ride rollerCoaster = createRollerCoaster();

        rollerCoaster.addVisitorToQueue(new Visitor("Jack", "Li", 25, "V001", 1));
        rollerCoaster.addVisitorToQueue(new Visitor("Sharon", "Li", 22, "V002", 2));
        rollerCoaster.addVisitorToQueue(new Visitor("Benny", "Li", 28, "V003", 3));
        rollerCoaster.addVisitorToQueue(new Visitor("Leo", "Li", 20, "V004", 4));
        rollerCoaster.addVisitorToQueue(new Visitor("Nehemia", "Li", 24, "V005", 5));

        rollerCoaster.removeVisitorFromQueue(new Visitor("Sharon", "Li", 22, "V002", 2));

        rollerCoaster.printQueue();
    }

    public void partFourA()
    {
        System.out.println("Executing Part Four A");
        Ride rollerCoaster = createRollerCoaster();

        rollerCoaster.addVisitorToHistory(new Visitor("Tom", "Liu", 35, "V006", 1));
        rollerCoaster.addVisitorToHistory(new Visitor("Sheryl", "Liu", 30, "V007", 2));
        rollerCoaster.addVisitorToHistory(new Visitor("Ben", "Liu", 40, "V008", 3));
        rollerCoaster.addVisitorToHistory(new Visitor("David", "Liu", 45, "V009", 4));
        rollerCoaster.addVisitorToHistory(new Visitor("Jason", "Liu", 50, "V010", 5));

        boolean hasVisitor = rollerCoaster.checkVisitorFromHistory(new Visitor("David", "Liu", 45, "V009", 4));
        System.out.println("Visitor exists in history: " + hasVisitor);

        rollerCoaster.numberOfVisitors();

        rollerCoaster.printRideHistory();
    }

    public void partFourB()
    {
        System.out.println("Executing Part Four B");
        Ride rollerCoaster = createRollerCoaster();

        List<Visitor> visitors = new ArrayList<>();
        visitors.add(new Visitor("Alice", "Smith", 30, "V001", 5));
        visitors.add(new Visitor("Bob", "Brown", 22, "V002", 2));
        visitors.add(new Visitor("Charlie", "Johnson", 28, "V003", 3));
        visitors.add(new Visitor("Alice", "Johnson", 25, "V004", 1));
        visitors.add(new Visitor("David", "Smith", 35, "V005", 4));

        for (Visitor visitor : visitors)
        {
            rollerCoaster.addVisitorToHistory(visitor);
        }

        System.out.println("Unsorted ride history:");
        rollerCoaster.printRideHistory();

        rollerCoaster.sortRideHistory();

        System.out.println("Sorted ride history:");
        rollerCoaster.printRideHistory();
    }

    public void partFive() {
        System.out.println("Executing Part Five");
    }

    public void partSix() {
        System.out.println("Executing Part Six");
    }

    public void partSeven() {
        System.out.println("Executing Part Seven");
    }
}
